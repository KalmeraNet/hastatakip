/**
 * HastaTakipBack
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as api from "./api"
import { Configuration } from "./configuration"

const config: Configuration = {}

describe("FormFunctionsApi", () => {
  let instance: api.FormFunctionsApi
  beforeEach(function() {
    instance = new api.FormFunctionsApi(config)
  });

  test("getServerForm", () => {
    const body: api.GetServerFormResult = undefined
    return expect(instance.getServerForm(body, {})).resolves.toBe(null)
  })
})

describe("FormsFunctionsApi", () => {
  let instance: api.FormsFunctionsApi
  beforeEach(function() {
    instance = new api.FormsFunctionsApi(config)
  });

  test("getServerForms", () => {
    const body: api.GetServerFormsResult = undefined
    return expect(instance.getServerForms(body, {})).resolves.toBe(null)
  })
})

describe("HastaTakipBackApi", () => {
  let instance: api.HastaTakipBackApi
  beforeEach(function() {
    instance = new api.HastaTakipBackApi(config)
  });

  test("v1GetServerUserXGet", () => {
    return expect(instance.v1GetServerUserXGet({})).resolves.toBe(null)
  })
})

describe("ListFunctionsApi", () => {
  let instance: api.ListFunctionsApi
  beforeEach(function() {
    instance = new api.ListFunctionsApi(config)
  });

  test("getServerList", () => {
    const body: api.GetServerListResult = undefined
    return expect(instance.getServerList(body, {})).resolves.toBe(null)
  })
})

describe("LocationFunctionsApi", () => {
  let instance: api.LocationFunctionsApi
  beforeEach(function() {
    instance = new api.LocationFunctionsApi(config)
  });

  test("getServerLocation", () => {
    const body: api.GetServerLocationResult = undefined
    return expect(instance.getServerLocation(body, {})).resolves.toBe(null)
  })
})

describe("ProjectFunctionsApi", () => {
  let instance: api.ProjectFunctionsApi
  beforeEach(function() {
    instance = new api.ProjectFunctionsApi(config)
  });

  test("getServerProject", () => {
    const body: api.GetServerProjectResult = undefined
    return expect(instance.getServerProject(body, {})).resolves.toBe(null)
  })
})

describe("UserFunctionsApi", () => {
  let instance: api.UserFunctionsApi
  beforeEach(function() {
    instance = new api.UserFunctionsApi(config)
  });

  test("getServerUser", () => {
    const body: api.GetServerUserRequest = undefined
    return expect(instance.getServerUser(body, {})).resolves.toBe(null)
  })
})

